C51 COMPILER V9.56.0.0   DS1302                                                            06/30/2017 11:43:18 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE Source\ds1302.c OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Include;E:\Keil_v5\C51
                    -\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\ds1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include <stc15.h>
   2          #include "ds1302.h"
   3          
   4          /*=================================================
   5          *函数名称：DS1302_W_Byte
   6          *函数功能：DS1302写一字节数据
   7          *输入：dat：要写入的数据
   8          =================================================*/
   9          void DS1302_W_Byte(uchar dat)
  10          {
  11   1        uchar i;
  12   1        for(i = 0; i < 8; i++) //每次写1bit，写8次
  13   1        {
  14   2          TSCLK = 0;       //拉低时钟总线
  15   2          TIO = dat & 0x01;  //从一字节最低位开始写
  16   2          TSCLK = 1;       //拉高时钟总线，DS1302把数据读走
  17   2          dat >>= 1;       //数据右移一位 
  18   2        } 
  19   1      }
  20          /*=================================================
  21          *函数名称：DS1302_R_Byte
  22          *函数功能：DS1302读一字节
  23          *输出：dat：读取的数据
  24          =================================================*/
  25          uchar DS1302_R_Byte()
  26          {
  27   1        uchar i, dat;
  28   1        for(i = 0; i < 8; i++)  //每次写1bit，写8次
  29   1        {
  30   2          TSCLK = 0;      //拉低时钟总线，DS1302把数据放到数据总线上
  31   2          dat >>= 1;      //数据右移一位，数据从最低位开始读 
  32   2          if(TIO) dat |= 0x80;//读取数据
  33   2          TSCLK = 1;      //拉高时钟总线
  34   2        }
  35   1        return dat;       //返回读取的数据
  36   1      }
  37          /*=================================================
  38          *函数名称：DS1302_W_DAT
  39          *函数功能：写DS1302数据一次写2个字节
  40          *说明：先写命令后写数据
  41          *调用：DS1302_W_Byte()
  42          *输入：cmd：需要写的命令 ，dat：需要些的数据
  43          =================================================*/
  44          void DS1302_W_DAT(uchar cmd, uchar dat)
  45          {
  46   1        TRST = 0;      //拉低使能端
  47   1        TSCLK = 0;       //拉低数据总线
  48   1        TRST = 1;      //拉高使能端，开始写数据
  49   1        DS1302_W_Byte(cmd);  //写命令
  50   1        DS1302_W_Byte(dat);  //写数据
  51   1      }
  52          /*=================================================
  53          *函数名称：DS1302_R_DAT
  54          *函数功能：读DS1302数据
C51 COMPILER V9.56.0.0   DS1302                                                            06/30/2017 11:43:18 PAGE 2   

  55          *说明：先写入命令字节后读出对应数据
  56          *调用：  DS1302_W_Byte();DS1302_R_Byte();
  57          *输入：  cmd：需要写的命令
  58          *输出：  dat：读出的数据
  59          =================================================*/
  60          uchar DS1302_R_DAT(uchar cmd)
  61          {
  62   1        uchar dat;
  63   1        TRST = 0;       //拉低使能端
  64   1        TSCLK = 0;        //拉低数据总线
  65   1        TRST = 1;       //拉高使能端，开始写数据
  66   1        DS1302_W_Byte(cmd);   //写命令
  67   1        dat = DS1302_R_Byte();  //读出数据
  68   1        return dat;       //返回读出数据
  69   1      }
  70          
  71          /*=================================================
  72          *函数名称：DS1302_Clear_WP
  73          *函数功能：清除DS1302写保护
  74          *说明：先写入命令0x8e（写控制寄存器）接着向该寄存器写0
  75          *调用：DS1302_W_DAT()
  76          =================================================*/
  77          void DS1302_Clear_WP()
  78          {
  79   1        DS1302_W_DAT(0x8e,0x00);  //把控制寄存器WP位置0
  80   1      }
  81          /*=================================================
  82          *函数名称：DS1302_Clear_WP
  83          *函数功能：设置DS1302写保护
  84          *说明：先写入命令0x8e（写控制寄存器）接着向该寄存器写0x80
  85          *调用：DS1302_W_DAT()
  86          =================================================*/
  87          void DS1302_Set_WP()
  88          { 
  89   1        DS1302_W_DAT(0x8e,0x80); //把控制寄存器WP位置1
  90   1        TRST = 0;        //拉低使能端
  91   1        TSCLK = 0;         //拉低数据总线
  92   1      } 
  93          /*=================================================
  94          *函数名称：Set_DS1302_Time
  95          *函数功能：设置DS1302时钟日历数据
  96          *说明：把时钟日历暂存数组TimeData数据转换为BCD码并
  97               写入到DS1302时钟日历寄存器中
  98          *调用：DS1302_Clear_WP();DS1302_W_DAT();DS1302_Set_WP();
  99          *输入：addr:需要写入寄存器的地址 ，TimeData数组：时钟日历初始值
 100          =================================================*/
 101          void Set_DS1302_Time(uchar addr)
 102          {
 103   1        uchar i, j;
 104   1        DS1302_Clear_WP();    //清除写保护
 105   1        for(i = 0; i < 7; i++)  //写入7个字节的时钟初始值
 106   1        {
 107   2          j = TimeData[i]/10;  //BCD码转换
 108   2          TimeData[i] %= 10;   //BCD码转换
 109   2          TimeData[i] += j*16; //BCD码转换
 110   2          DS1302_W_DAT(addr, TimeData[i]); //先写DS1302时钟日历起始地址，再写数据
 111   2          addr += 2;   //时钟日历寄存器地址+2转向下一个寄存器
 112   2        }
 113   1        DS1302_Set_WP(); //开起写保护    
 114   1      }
 115          /*=================================================
 116          *函数名称：Read_DS1302_Time
C51 COMPILER V9.56.0.0   DS1302                                                            06/30/2017 11:43:18 PAGE 3   

 117          *函数功能：读取DS1302时钟数据
 118          *说明：  读取DS1302时钟数据 返回数据存入时钟日历暂存
 119              数组TimeData（数据格式BCD码）
 120          *调用：DS1302_Clear_WP();DS1302_R_DAT();DS1302_Set_WP();
 121          *输入：  addr：需要读取时钟日历寄存器的起始地址
 122          =================================================*/
 123          void Read_DS1302_Time(uchar addr)
 124          {
 125   1        uchar i,j;
 126   1        DS1302_Clear_WP();      //清楚些保护
 127   1        for(i = 0; i < 7; i++)  //从DS1302读取7个字节的时钟日历数据
 128   1        {
 129   2          TimeData[i] = DS1302_R_DAT(addr);//先写入要读取数据的寄存器起始地址，再读出数据存
             -入TimeData数组
 130   2          addr += 2;             //时钟日历寄存器地址+2转向下一个寄存器
 131   2          j = TimeData[i]/16;  //BCD码转换
 132   2          TimeData[i] %= 16;   //BCD码转换
 133   2          TimeData[i] += j*10; //BCD码转换
 134   2        }
 135   1        DS1302_Set_WP();   //开起写保护
 136   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
